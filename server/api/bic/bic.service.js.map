{"version":3,"sources":["../../../../server/api/bic/bic.service.js"],"names":[],"mappings":"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","file":"bic.service.js","sourcesContent":["\n'use strict';\n\n\nimport _ from 'lodash';\nimport request from 'request-promise';\nvar jsonfile = require('bluebird').promisifyAll(require('jsonfile'));\n\n\nconst INDUSTRIES_URL = `https://api.businessdescription.co.nz/api/industries`;\nconst DIVISIONS_URL = `https://api.businessdescription.co.nz/api/industries/{{industryId}}/divisions`;\nconst CLASSES_URL = `https://api.businessdescription.co.nz/api/divisions/{{divisionId}}/classes`;\nconst BICS_URL = `https://api.businessdescription.co.nz/api/bics`;\nconst BICS_SEED_FILENAME =`${__dirname}/../../config/seed/bic.json`;\n\n\nexport function index(){\n  return Promise.resolve()\n    .then(() => {\n\n      //TODO should seed properly and use database\n      return jsonfile.readFileAsync(BICS_SEED_FILENAME)\n      .then(bics => {\n          if(bics && bics.length > 0) { return bics; }\n\n          let bicsRequest = request(getBicsRequest());\n\n          return request(getIndustriesRequest())\n            .then(industries => {\n              return Promise.all(_(industries).map(industry => {\n                return request(getDivisionsRequest(industry.id))\n                  .then(divisions => {\n                    return _(divisions).map(division => {\n                      division.industryName = industry.name;\n                      return division;\n                    }).value();\n                  });\n              }).value())\n\n                .then(divisions => {\n                  return Promise.all(_(divisions).flatten().map(division => {\n                    return request(getClassesRequest(division.id))\n                      .then(classes => {\n                        return _(classes).map(clazz => {\n                          clazz.divisionName = division.name;\n                          clazz.industryName = division.industryName;\n                          clazz.industryId = division.industryId;\n                          return clazz;\n                        }).value();\n                      });\n                  }).value())\n\n                    .then(classes => {\n                      return bicsRequest.then(bics => {\n                        return _(classes).flatten().map(clazz => {\n                          clazz.className = clazz.name;\n                          clazz.classId = clazz.id;\n                          return clazz;\n                        }).map(clazz => {\n                          let bic = _.find(bics, _.matchesProperty('classId', clazz.classId));\n                          return _.merge({}, clazz, bic);\n                        })\n                        .map(clazz => {\n                          return _.omit(clazz, 'id', 'name', 'anzsicId', 'cuId', 'definition', 'important', 'lastUpdateDate', 'lastUpdateUserId');\n                        }).value();\n                      });\n                    })\n                    .then(bics => {\n                      //Cache to seed folder\n                      jsonfile.writeFileAsync(BICS_SEED_FILENAME, bics);\n                      return bics;\n                    });\n                });\n            });\n        });\n    });\n}\n\n\nfunction getIndustriesRequest(){\n  return _.merge({ uri: getIndustriesUrl() }, getBaseRequest());\n}\n\nfunction getDivisionsRequest(industryId){\n  return _.merge({ uri: getDivisionsUrl(industryId) }, getBaseRequest());\n}\n\nfunction getClassesRequest(divisionId){\n  return _.merge({ uri: getClassesUrl(divisionId) }, getBaseRequest());\n}\nfunction getBicsRequest(){\n  return _.merge({ uri: getBicsUrl() }, getBaseRequest());\n}\n\nfunction getBaseRequest(){\n  return {\n    rejectUnauthorized: false,\n    requestCert: true,\n    json: true\n  }\n}\n\nfunction getIndustriesUrl(){\n  return INDUSTRIES_URL;\n}\n\nfunction getBicsUrl(){\n  return BICS_URL;\n}\n\nfunction getDivisionsUrl(industryId){\n  if(!industryId){ throw new Error('No industry id passed')}\n  return DIVISIONS_URL.replace('{{industryId}}', industryId);\n}\n\nfunction getClassesUrl(divisionId){\n  if(!divisionId){ throw new Error('No division id passed')}\n  return CLASSES_URL.replace('{{divisionId}}', divisionId);\n}\n"]}