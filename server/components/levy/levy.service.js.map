{"version":3,"sources":["../../../../server/components/levy/levy.service.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;;;;;;;;;;sBAEC,QAAQ;;;;kBACP,IAAI;;;;8BACC,iBAAiB;;;;uBACjB,SAAS;;;;uBACT,SAAS;;;;yBACC,WAAW;;AACzC,IAAI,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;;AAGrE,IAAM,kBAAkB,kDAAkD,CAAC;AAC3E,IAAM,wBAAwB,GAAM,SAAS,gDAA6C,CAAC;AAC3F,IAAM,yBAAyB,GAAM,SAAS,iDAA8C,CAAC;;AAItF,SAAS,SAAS,CAAC,MAAM,EAAC;AAC/B,SAAO,qBAAqB,CAAC,MAAM,CAAC,CAAC;CACtC;;AAGM,SAAS,qBAAqB,CAAC,IAAyB,EAAC;MAAzB,MAAM,GAAP,IAAyB,CAAxB,MAAM;MAAE,QAAQ,GAAjB,IAAyB,CAAhB,QAAQ;MAAE,KAAK,GAAxB,IAAyB,CAAN,KAAK;;AAE5D,SAAO,iCAAQ,cAAc,CAAC,EAAC,MAAM,EAAN,MAAM,EAAE,QAAQ,EAAR,QAAQ,EAAE,KAAK,EAAL,KAAK,EAAC,CAAC,CAAC,CACtD,IAAI,CAAC,4BAA4B,CAAC,CAAC;CACvC;;AAGM,SAAS,qBAAqB,CAAC,KAAyB,EAAC;MAAzB,MAAM,GAAP,KAAyB,CAAxB,MAAM;MAAE,QAAQ,GAAjB,KAAyB,CAAhB,QAAQ;MAAE,KAAK,GAAxB,KAAyB,CAAN,KAAK;;;;;;;;AAS5D,SAAO,YAAY,EAAE,CAClB,IAAI,CAAC,UAAA,SAAS,EAAI;AACjB,QAAI,WAAW,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC;AACpC,QAAM,kBAAkB,GAAG,IAAI,CAAC;;AAGhC,QAAI,mBAAmB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,CAAC;AAChE,QAAI,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC;;AAG1D,QAAI,sBAAsB,GAAG,WAAW,CAAC,QAAQ,GAAG,gBAAgB,CAAC;AACrE,QAAI,uBAAuB,GAAG,CAAC,WAAW,CAAC,KAAK,GAAG,kBAAkB,CAAA,GAAI,mBAAmB,CAAC;;AAE7F,QAAI,yBAAyB,GAAG,WAAW,CAAC,MAAM,GAAG,gBAAgB,GAAG,IAAI,CAAC;AAC7E,QAAI,0BAA0B,GAAG,WAAW,CAAC,MAAM,GAAG,mBAAmB,CAAC;;AAE1E,QAAI,gBAAgB,GAAG,kBAAkB,GAAG,mBAAmB,CAAC;;AAGhE,QAAI,WAAW,GAAG,sBAAsB;;AAEtB,6BAAyB;;AAEzB,oBAAgB,CAAC;;AAEnC,WAAO;AACL,qBAAe,EAAE;AACf,WAAG,EAAE,sBAAsB;OAC5B;AACD,wBAAkB,EAAE;AAClB,WAAG,EAAE,yBAAyB;OAC/B;AACD,sBAAgB,EAAE;AAChB,WAAG,EAAE,gBAAgB;OACtB;AACD,qBAAe,EAAE;AACf,WAAG,EAAE,WAAW;OACjB;KACF,CAAA;GACF,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAyCN;;AAEM,SAAS,YAAY,GAAE;AAC5B,SAAO,QAAQ,CAAC,aAAa,CAAC,yBAAyB,CAAC,SAChD,CAAC,UAAA,GAAG,EAAI;AAAC,WAAO,EAAE,CAAC;GAAC,CAAC,CAC1B,IAAI,CAAC,UAAA,MAAM,EAAI;;AAEd,QAAG,yBAAE,MAAM,CAAC,CAAC,GAAG,EAAE,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,EAAC;AAAE,aAAO,MAAM,CAAC;KAAE;;AAExD,WAAO,aAAY,UAAC,OAAO,EAAE,MAAM,EAAK;;AAEtC,UAAI,aAAa,GAAG,EAAE,CAAC;;AAEvB,UAAI,SAAS,GAAG,EAAE,CAAC;AACnB,UAAI,WAAW,GAAG,EAAE,CAAC;;AAErB,UAAI,YAAY,GAAG,CAAC,CAAC,CAAC;AACtB,UAAI,uBAAuB,GAAG;AAC5B,SAAC,EAAE,MAAM;AACT,SAAC,EAAE,KAAK;AACR,SAAC,EAAE,UAAU;AACb,SAAC,EAAE,QAAQ;AACX,SAAC,EAAE,SAAS;AACZ,SAAC,EAAE,OAAO;OACX,CAAC;;AAEF,aAAO,0BAAe,CAAC,cAAc,CAAC,wBAAwB,EAAE,UAAS,GAAG,EAAE,IAAI,EAAC;;AAEjF,YAAG,GAAG,EAAC;AAAE,iBAAO,MAAM,CAAC,GAAG,CAAC,CAAC;SAAE;AAC9B,YAAG,CAAE,IAAI,EAAG;AAAE,iBAAO,OAAO,CAAC,aAAa,CAAC,CAAC;SAAE;AAC9C,YAAG,CAAE,IAAI,CAAC,IAAI,EAAE;AAAE,iBAAO;SAAE;;;;;;;;;;AAU3B,YAAI;AACF,cAAI,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACvB,qBAAS,GAAG,IAAI,CAAC,IAAI,CAAC;AACtB,uBAAW,GAAG,EAAE,CAAC;AACjB,yBAAa,CAAC,SAAS,CAAC,GAAG,WAAW,CAAC;AACvC,wBAAY,GAAG,CAAC,CAAC;WAClB,MACI,IAAI,YAAY,GAAG,CAAC,IAAI,YAAY,IAAI,CAAC,EAAE;;;AAG9C,gBAAG,YAAY,KAAK,CAAC,EAAC,EAErB,MACI,IAAG,YAAY,KAAK,CAAC,EAAC;AACzB,yBAAW,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;aAChE,MACI;AACH,yBAAW,CAAC,uBAAuB,CAAC,YAAY,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC,CAAC;aAC/F;AACD,wBAAY,EAAE,CAAC;WAEhB;SACF,CACD,OAAM,GAAG,EAAC;AAAE,gBAAM,CAAC,GAAG,CAAC,CAAC;SAAE;OAC3B,CAAC,CAAC;KAEJ,CAAC,CACC,IAAI,CAAC,UAAA,MAAM,EAAI;AACd,cAAQ,CAAC,cAAc,CAAC,yBAAyB,EAAE,MAAM,CAAC,CAAC;AAC3D,aAAO,MAAM,CAAC;KACf,CAAC,CAAC;GAEN,CAAC,CAAC;CACN;;AAGD,SAAS,QAAQ,GAAW;MAAV,IAAI,yDAAG,EAAE;;AACzB,SAAO,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,UAAU,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;CACrD;;AAED,SAAS,UAAU,GAAE;AACnB,SAAO,aAAY;IAAC;CACrB;;AAED,SAAS,cAAc,CAAC,KAAyB,EAAC;MAAzB,MAAM,GAAP,KAAyB,CAAxB,MAAM;MAAE,QAAQ,GAAjB,KAAyB,CAAhB,QAAQ;MAAE,KAAK,GAAxB,KAAyB,CAAN,KAAK;;AAC9C,SAAO;AACL,OAAG,EAAE,kBAAkB;AACvB,UAAM,EAAE,MAAM;AACd,QAAI,EAAE,sBAAsB,CAAC,EAAC,MAAM,EAAN,MAAM,EAAE,QAAQ,EAAR,QAAQ,EAAE,KAAK,EAAL,KAAK,EAAC,CAAC;GACxD,CAAC;CACH;;AAED,SAAS,sBAAsB,GAAiC;oEAAJ,EAAE;;MAA7B,MAAM,SAAN,MAAM;MAAE,QAAQ,SAAR,QAAQ;MAAE,KAAK,SAAL,KAAK;;AACtD,SAAO;AACL,YAAQ,EAAE,KAAK;AACf,QAAI,EAAE,EAAE;AACR,YAAQ,EAAE,MAAM;AAChB,cAAU,EAAE,MAAM;AAClB,oBAAgB,EAAE,UAAU;AAC5B,uBAAmB,EAAE,YAAY;AACjC,YAAQ,EAAE,YAAY,CAAC,QAAQ,CAAC;AAChC,SAAK,EAAE,YAAY,CAAC,KAAK,CAAC;AAC1B,kBAAc,EAAE,YAAY;AAC5B,gBAAY,EAAE,UAAU;AACxB,cAAU,EAAE,GAAG;AACf,WAAO,EAAE,EAAE;AACX,UAAM,EAAE,MAAM;AACd,iBAAa,EAAE,EAAE;AACjB,UAAM,EAAE,EAAE;AACV,gBAAY,EAAE,EAAE;AAChB,gBAAY,EAAE,EAAE;GACjB,CAAC;CACH;;AAED,SAAS,YAAY,GAAY;MAAX,MAAM,yDAAG,CAAC;;AAC9B,SAAO,0BAAQ,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;CACvC;;AAED,SAAS,4BAA4B,CAAC,IAAI,EAAC;AACzC,MAAI;;AACF,UAAI,CAAC,GAAG,qBAAQ,IAAI,CAAC,IAAI,CAAC,CAAC;AAC3B;WAAO,yBAAE,CAAC,CAAC,sDAAsD,CAAC,CAAC,CAAC,GAAG,CAAC,UAAC,GAAG,EAAE,KAAK,EAAK;AACtF,cAAI,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC;AAClB,cAAG,aAAa,CAAC,IAAI,CAAC,EAAC;AACrB,mBAAO,yBAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAC1B,GAAG,CAAC,UAAA,KAAK,EAAI;AAAC,qBAAO,oBAAE,GAAG,CAAC,KAAK,EAAE,eAAe,CAAC,CAAC;aAAC,CAAC,CACrD,IAAI,EAAE,CACN,MAAM,CAAC,UAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAI;;AAE7B,oBAAM,CAAC,sBAAsB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;AAC5C,qBAAO,MAAM,CAAC;aACf,EAAE,EAAE,CAAC,CAAC;WACV,MACI;AACH,mBAAO,SAAS,CAAC;WAClB;SACF,CAAC,CAAC,MAAM,EAAE,CAAC,MAAM,CAAC,UAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAK;AACzC,gBAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,CAAC;AACzC,iBAAO,MAAM,CAAC;SACf,EAAE,EAAE,CAAC;QAAC;;;;GACR,CACD,OAAM,GAAG,EAAC;AACR,WAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,GAAG,CAAC,CAAC;AACvD,UAAM,GAAG,CAAC;GACX;CACF;;AAGD,SAAS,aAAa,CAAC,IAAI,EAAC;AAC1B,SAAO,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;CACvC;;AAED,SAAS,sBAAsB,CAAC,KAAK,EAAC;AACpC,MAAG,KAAK,GAAG,CAAC,EAAC;AAAC,UAAM,IAAI,KAAK,yCAAuC,KAAK,OAAI,CAAC;GAAC;AAC/E,SAAO,CAAA;AACL,KAAC,EAAE,IAAI;AACP,KAAC,EAAE,KAAK;AACR,KAAC,EAAE,SAAS;IACb,CAAC,KAAK,CAAC,CAAC;CACV;;AAED,SAAS,mBAAmB,CAAC,KAAK,EAAC;AACjC,MAAG,KAAK,GAAG,EAAE,EAAC;AAAC,UAAM,IAAI,KAAK,sCAAoC,KAAK,OAAI,CAAC;GAAC;AAC7E,SAAO,CAAA;AACL,KAAC,EAAE,aAAa;AAChB,KAAC,EAAE,iBAAiB;AACpB,KAAC,EAAE,yBAAyB;AAC5B,KAAC,EAAE,oBAAoB;AACvB,KAAC,EAAE,oBAAoB;AACvB,KAAC,EAAE,kBAAkB;AACrB,KAAC,EAAE,qBAAqB;AACxB,KAAC,EAAE,kBAAkB;AACrB,KAAC,EAAE,kBAAkB;AACrB,KAAC,EAAE,kBAAkB;AACrB,MAAE,EAAE,iBAAiB;AACrB,MAAE,EAAE,cAAc;IACnB,CAAC,KAAK,CAAC,CAAC;CACV","file":"levy.service.js","sourcesContent":["'use strict';\n\nimport _ from 'lodash';\nimport he from 'he';\nimport request from 'request-promise';\nimport cheerio from 'cheerio';\nimport numeral from 'numeral';\nimport {PdfReader, Rule} from 'pdfreader';\nvar jsonfile = require('bluebird').promisifyAll(require('jsonfile'));\n\n\nconst ACC_CPX_CALCULATOR = `https://www.levycalculators.acc.co.nz/cpx.jsp`;\nconst ACC_LEVIES_PDF_2015_2016 = `${__dirname}/../../config/seed/acc_levies_2015_2016.pdf`;\nconst ACC_LEVIES_JSON_2015_2016 = `${__dirname}/../../config/seed/acc_levies_2015_2016.json`;\n\n\n\nexport function calculate(params){\n  return calculateLevyExternal(params);\n}\n\n\nexport function calculateLevyExternal({cuCode, earnings, cover}){\n\n  return request(getLevyRequest({cuCode, earnings, cover}))\n    .then(parseExternalLevyCalculation);\n}\n\n\nexport function calculateLevyInternal({cuCode, earnings, cover}){\n\n  //TODO implement http://www.acc.co.nz/for-business/tax-agents-accountants-and-advisors/levies-and-invoicing/bus00080\n\n  //TODO do we want to attempt to do this on the client?\n\n  //TODO validate numeric earnings/cover parameters\n\n\n  return getLevyRates()\n    .then(levyRates => {\n      let cuLevyRates = levyRates[cuCode];\n      const WORKING_SAFER_LEVY = 0.08;\n\n\n      let hunderedsOfEarnings = Math.ceil(parseFloat(earnings) / 100);\n      let hunderedsOfCover = Math.ceil(parseFloat(cover) / 100);\n\n\n      let currentWorkAccountLevy = cuLevyRates.empOrSep * hunderedsOfCover;\n      let residualWorkAccountLevy = (cuLevyRates.rclWs - WORKING_SAFER_LEVY) * hunderedsOfEarnings;\n\n      let currentEarnersAccountLevy = cuLevyRates.cpxStd * hunderedsOfCover * 1.25;\n      let residualEarnersAccountLevy = cuLevyRates.cpxStd * hunderedsOfEarnings;\n\n      let workingSaferLevy = WORKING_SAFER_LEVY * hunderedsOfEarnings;\n\n\n      let cpxLevyRate = currentWorkAccountLevy +\n                        //residualWorkAccountLevy +\n                        currentEarnersAccountLevy +\n                        //residualEarnersAccountLevy +\n                        workingSaferLevy;\n\n      return {\n        workLevyCurrent: {\n          cpx: currentWorkAccountLevy\n        },\n        earnersLevyCurrent: {\n          cpx: currentEarnersAccountLevy\n        },\n        workingSaferLevy: {\n          cpx: workingSaferLevy\n        },\n        totalWithoutGST: {\n          cpx: cpxLevyRate\n        }\n      }\n    });\n\n  //{\n  //  coverAmount: {cp: '44444.0', cpx: '55555.0', cpxLlwc: '55555.0'},\n////  workLevyCurrent: {cp: '822.21', cpx: '1097.44', cpxLlwc: '1041.73'},\n  //  healthAndSafetyDiscount: {cp: '0.0', cpx: '0.0', cpxLlwc: '0.0'},\n  //  netWorkLevyCurrent: {cp: '822.21', cpx: '1097.44', cpxLlwc: '1041.73'},\n////  earnersLevyCurrent: {cp: '672.22', cpx: '842.58', cpxLlwc: '842.58'},\n  //  netTotalWorkLevy: {cp: '1494.43', cpx: '1940.02', cpxLlwc: '1884.31'},\n  //  earnersLevyResidual: {cp: '0.0', cpx: '0.0', cpxLlwc: '0.0'},\n////  workingSaferLevy: {cp: '44.44', cpx: '44.44', cpxLlwc: '44.44'},\n  //  workLevyResidual: {cp: '0.0', cpx: '0.0', cpxLlwc: '0.0'},\n  //  totalOtherLevies: {cp: '44.44', cpx: '44.44', cpxLlwc: '44.44'},\n  //  totalWithoutGST: {cp: '1538.8700000000001', cpx: '1984.46', cpxLlwc: '1928.75'},\n  //  totalWithGST: {cp: '1769.7', cpx: '2282.13', cpxLlwc: '2218.06'}\n  //}\n\n  //Levy name\n  //What the levy covers\n  //How it is calculated\n\n  //The current portion of the Work Account levy\n  //Covers medical, rehabilitation and lost earnings compensation costs for injuries that happen at work\n  //The classification unit levy rate x each $100 of agreed level of lost earnings cover\n\n  //The residual portion of the Work Account levy\n  //Provides funds for the ongoing costs of work injuries that occurred before 1 July 1999 and non-work injuries to earners before 1 July 1992. This levy is spread across all levy payers\n  //The classification unit residual portion levy rate x each $100 of liable earnings\n\n  //The current portion of the Earner’s Account levy\n  //Covers medical, rehabilitation and lost earnings compensation costs for any injury sustained outside work. This is paid by every employee and self-employed person in New Zealand\n  //The Earner’s current portion levy rate x each $100 of agreed level of lost earnings cover x 1.25\n\n  //The residual portion of the Earners’ levy\n  //The continuing cost of non-work injuries to earners that happened between 1 July 1992 and 30 June 1999\n  //The Earner’s residual portion levy rate x each $100 of liable earnings\n\n  //The Working Safer levy\n  //This levy is collected on behalf of the Department Ministry of Business, Innovation and Employment to support the activities of WorkSafe New Zealand.\n  //$0.08 x each $100 of liable earnings\n\n}\n\nexport function getLevyRates(){\n  return jsonfile.readFileAsync(ACC_LEVIES_JSON_2015_2016)\n    .catch(err => {return {};})\n    .then(levies => {\n\n      if(_(levies).map().value().length > 0){ return levies; }\n\n      return new Promise((resolve, reject) => {\n\n        let cuToLeviesMap = {};\n\n        let currentCu = '';\n        let currentLevy = {};\n\n        let currentIndex = -1;\n        let currentIndexPropertyMap = {\n          1: 'desc',\n          2: 'lrg',\n          3: 'empOrSep',\n          4: 'cpxStd',\n          5: 'cpxLlwc',\n          6: 'rclWs'\n        };\n\n        return new PdfReader().parseFileItems(ACC_LEVIES_PDF_2015_2016, function(err, item){\n\n          if(err){ return reject(err); }\n          if(! item ) { return resolve(cuToLeviesMap); }\n          if(! item.text ){ return; }\n\n          //PDF ITEM:  01110\n          //PDF ITEM:  Nursery production\n          //PDF ITEM:  010\n          //PDF ITEM:  $0.93\n          //PDF ITEM:  $1.24\n          //PDF ITEM:  $1.17\n          //PDF ITEM:  $0.46\n\n          try {\n            if (isCuText(item.text)) {\n              currentCu = item.text;\n              currentLevy = {};\n              cuToLeviesMap[currentCu] = currentLevy;\n              currentIndex = 1;\n            }\n            else if (currentIndex > 0 && currentIndex <= 6) {\n\n              //We don't care about the description\n              if(currentIndex === 1){\n\n              }\n              else if(currentIndex === 2){\n                currentLevy[currentIndexPropertyMap[currentIndex]] = item.text;\n              }\n              else {\n                currentLevy[currentIndexPropertyMap[currentIndex]] = parseFloat(item.text.replace(/\\$/g, ''));\n              }\n              currentIndex++;\n\n            }\n          }\n          catch(err){ reject(err); }\n        });\n\n      })\n        .then(levies => {\n          jsonfile.writeFileAsync(ACC_LEVIES_JSON_2015_2016, levies);\n          return levies;\n        });\n\n    });\n}\n\n\nfunction isCuText(text = ''){\n  return text.length === 5 && getCuRegex().test(text);\n}\n\nfunction getCuRegex(){\n  return /\\b\\d{5}\\b/g;\n}\n\nfunction getLevyRequest({cuCode, earnings, cover}){\n  return {\n    uri: ACC_CPX_CALCULATOR,\n    method: 'POST',\n    form: getBaseExternalCpxForm({cuCode, earnings, cover})\n  };\n}\n\nfunction getBaseExternalCpxForm({cuCode, earnings, cover} = {}) {\n  return {\n    formName: 'cpx',\n    name: '',\n    levyYear: '2016',\n    clientType: 'self',\n    employmentStatus: 'fullTime',\n    employmentStartDate: '01/04/2015',\n    earnings: formatSalary(earnings),\n    cover: formatSalary(cover),\n    coverStartDate: '01/04/2016',\n    policyOption: 'standard',\n    hsDiscount: '0',\n    bicCode: '',\n    cuCode: cuCode,\n    cuDescription: '',\n    cuText: '',\n    searchCUCode: '',\n    searchCUName: ''\n  };\n}\n\nfunction formatSalary(salary = 0){\n  return numeral(salary).format('$0,0');\n}\n\nfunction parseExternalLevyCalculation(body){\n  try {\n    let $ = cheerio.load(body);\n    return _($('#levyCalcReport fieldset#onePage > fieldset table tr')).map((row, index) => {\n      let $row = $(row);\n      if(isCurrencyRow($row)){\n        return _($row.find('.money'))\n          .map(money => {return _.get(money, 'attribs.value');})\n          .tail()\n          .reduce((result, value, key)=> {\n            //result[getColumnNameFromIndex(key)] = parseFloat(value);\n            result[getColumnNameFromIndex(key)] = value;\n            return result;\n          }, {});\n      }\n      else {\n        return undefined;\n      }\n    }).filter().reduce((result, value, key) => {\n      result[getRowNameFromIndex(key)] = value;\n      return result;\n    }, {});\n  }\n  catch(err){\n    console.log('error parseExternalLevyCalculation', err);\n    throw err;\n  }\n}\n\n\nfunction isCurrencyRow($row){\n  return $row.find('.money').length > 0;\n}\n\nfunction getColumnNameFromIndex(index){\n  if(index > 2){throw new Error(`Column index larger than expected (${index})`);}\n  return {\n    0: 'cp',\n    1: 'cpx',\n    2: 'cpxLlwc'\n  }[index];\n}\n\nfunction getRowNameFromIndex(index){\n  if(index > 11){throw new Error(`Row index larger than expected (${index})`);}\n  return {\n    0: 'coverAmount',\n    1: 'workLevyCurrent',\n    2: 'healthAndSafetyDiscount',\n    3: 'netWorkLevyCurrent',\n    4: 'earnersLevyCurrent',\n    5: 'netTotalWorkLevy',\n    6: 'earnersLevyResidual',\n    7: 'workingSaferLevy',\n    8: 'workLevyResidual',\n    9: 'totalOtherLevies',\n    10: 'totalWithoutGST',\n    11: 'totalWithGST'\n  }[index];\n}\n"]}